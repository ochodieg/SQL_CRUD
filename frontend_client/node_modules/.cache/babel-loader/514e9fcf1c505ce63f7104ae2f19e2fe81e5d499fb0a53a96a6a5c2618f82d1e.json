{"ast":null,"code":"var _jsxFileName = \"/home/neith/cs230L_Final/frontend_client/src/pages/Add.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// const Add = () => {\n//     //useState takes values from webpage inputs into json object\n//     const [book,setBook] = useState({   // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n//         // name attributes below must match these\n//         title:\"\",\n//         desc:\"\",\n//         price:null,\n//         cover:null\n//     })\n\n//     const navigate = useNavigate()\n\n//     const handleChange = (e) =>{\n//         //whenever input changes, set book\n//         // this allows fields to update in real-time?\n//         setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n//         // syntax here is wild. jesus\n//     };\n\n//     //will use axios to send data to backend\n//     // if you make a \"???\" cast(?) it should be an async function?\n//     const handleClick = async e =>{\n//         e.preventDefault() // button default behavior refreshes page\n//         try{\n//             await axios.post(\"http://10.0.0.181:8800/books\", book)  // send to json object\n//             navigate(\"/\")   // use router dom navigate function to return to home page\n//         }catch(err){\n//             console.log(err)\n//         }\n//     }\n\n//     console.log(book);\n\n//     return(\n//         <div className='form'>\n//             <h1>Add New Book</h1>\n//             <input type=\"text\" placeholder='title' onChange={handleChange} name=\"title\" /> \n\n//             <input type=\"text\" placeholder='description' onChange={handleChange} name=\"desc\" />\n\n//             <input type=\"number\" placeholder='price' onChange={handleChange} name=\"price\"/>\n\n//             <input type=\"file\" placeholder='cover' onChange={handleChange} name=\"cover\" />\n\n//             <button className=\"formButton\" onClick={handleClick}>Add</button>\n//         </div>\n//     )\n// }\n\n// new handles file data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Add = () => {\n  _s();\n  //useState takes values from webpage inputs into json object\n  const [book, setBook] = useState({\n    // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n    // name attributes below must match these\n    title: \"\",\n    desc: \"\",\n    price: null,\n    cover: null\n  });\n  const formData = new FormData();\n  const navigate = useNavigate();\n  const url = \"http://10.0.0.181:8800/books\";\n  const createImage = newImage => axios.post(url, newImage); // for img file\n\n  const createPost = async post => {\n    // for img file\n    try {\n      await createImage(post);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  const handleChange = e => {\n    // updates whenever input field changes\n    // if(e.target.name === \"cover\"){\n    //     const file = e.target.files\n    //     // if input is for the cover image, it sets the cover property to the selected file\n    //     setBook((prev) => ({ ...prev, cover: e.target.files[0]}));\n    // }else{// otherwise it updates the corresponding property based on the inputs name\n    //     //whenever input changes, set book\n    //     // this allows fields to update in real-time?\n    //     setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n    //     // syntax here is wild. jesus\n    // }\n    setBook(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    //handles form submission by first converting img to base64\n    e.preventDefault();\n    try {\n      //upload and get base64 data\n      const base64 = await convertToBase64(book.coverFile);\n      // add base64 data to book object\n      const newBook = {\n        ...book,\n        cover: base64\n      };\n\n      //send to back end\n      await axios.post(url, newBook);\n\n      //clear form\n      setBook({\n        title: \"\",\n        desc: \"\",\n        price: '',\n        cover: '',\n        coverFile: null\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    setBook({\n      ...book,\n      coverFile: file\n    });\n  };\n  //will use axios to send data to backend\n  // if you make a \"???\" cast(?) it should be an async function?\n  const handleClick = async e => {\n    e.preventDefault(); // button default behavior refreshes page\n    try {\n      // create formdata object to send form data including the image file\n\n      formData.append(\"title\", book.title);\n      formData.append(\"desc\", book.desc);\n      formData.append(\"price\", book.price);\n      formData.append(\"cover\", book.cover);\n      console.log(\"SUCCESS!!!\");\n      await axios.post(\"http://10.0.0.181:8800/books\", book, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\" // set content type in http header\n        }\n      });\n      navigate(\"/\"); // use router dom navigate function to return to home page\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(\"BOOK: \");\n  console.log(book);\n  console.log(\"FORM DATA: \");\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: handleChange,\n      name: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"description\",\n      onChange: handleChange,\n      name: \"desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"price\",\n      onChange: handleChange,\n      name: \"price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      label: \"Image\",\n      accept: \".jpeg, .png, .jpg\",\n      onChange: handleFileUpload,\n      name: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"formButton\",\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(Add, \"nJudgCdGmb/CB8ij6uaqDY6Z2qw=\", false, function () {\n  return [useNavigate];\n});\n_c = Add;\nexport default Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["axios","React","useState","useNavigate","jsxDEV","_jsxDEV","Add","_s","book","setBook","title","desc","price","cover","formData","FormData","navigate","url","createImage","newImage","post","createPost","err","console","log","message","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","base64","convertToBase64","coverFile","newBook","error","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","handleFileUpload","files","handleClick","append","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","label","accept","onClick","_c","$RefreshReg$"],"sources":["/home/neith/cs230L_Final/frontend_client/src/pages/Add.jsx"],"sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\n// const Add = () => {\n//     //useState takes values from webpage inputs into json object\n//     const [book,setBook] = useState({   // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n//         // name attributes below must match these\n//         title:\"\",\n//         desc:\"\",\n//         price:null,\n//         cover:null\n//     })\n\n//     const navigate = useNavigate()\n\n//     const handleChange = (e) =>{\n//         //whenever input changes, set book\n//         // this allows fields to update in real-time?\n//         setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n//         // syntax here is wild. jesus\n//     };\n\n//     //will use axios to send data to backend\n//     // if you make a \"???\" cast(?) it should be an async function?\n//     const handleClick = async e =>{\n//         e.preventDefault() // button default behavior refreshes page\n//         try{\n//             await axios.post(\"http://10.0.0.181:8800/books\", book)  // send to json object\n//             navigate(\"/\")   // use router dom navigate function to return to home page\n//         }catch(err){\n//             console.log(err)\n//         }\n//     }\n\n//     console.log(book);\n\n//     return(\n//         <div className='form'>\n//             <h1>Add New Book</h1>\n//             <input type=\"text\" placeholder='title' onChange={handleChange} name=\"title\" /> \n\n//             <input type=\"text\" placeholder='description' onChange={handleChange} name=\"desc\" />\n\n//             <input type=\"number\" placeholder='price' onChange={handleChange} name=\"price\"/>\n\n//             <input type=\"file\" placeholder='cover' onChange={handleChange} name=\"cover\" />\n\n//             <button className=\"formButton\" onClick={handleClick}>Add</button>\n//         </div>\n//     )\n// }\n\n\n// new handles file data\nconst Add = () => {\n    //useState takes values from webpage inputs into json object\n    const [book,setBook] = useState({   // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n        // name attributes below must match these\n        title:\"\",\n        desc:\"\",\n        price:null,\n        cover:null\n    })\n\n    const formData = new FormData();\n\n    const navigate = useNavigate()\n    const url =\"http://10.0.0.181:8800/books\"\n    const createImage = (newImage) => axios.post(url, newImage); // for img file\n\n    const createPost = async (post) =>{ // for img file\n        try{\n            await createImage(post);\n        }catch(err){\n            console.log(err.message);\n        }\n    };\n\n    const handleChange = (e) =>{ // updates whenever input field changes\n        // if(e.target.name === \"cover\"){\n        //     const file = e.target.files\n        //     // if input is for the cover image, it sets the cover property to the selected file\n        //     setBook((prev) => ({ ...prev, cover: e.target.files[0]}));\n        // }else{// otherwise it updates the corresponding property based on the inputs name\n        //     //whenever input changes, set book\n        //     // this allows fields to update in real-time?\n        //     setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n        //     // syntax here is wild. jesus\n        // }\n        setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n    };\n\n    const handleSubmit = async (e) =>{ //handles form submission by first converting img to base64\n        e.preventDefault();\n        try{\n            //upload and get base64 data\n            const base64 = await convertToBase64(book.coverFile);\n            // add base64 data to book object\n            const newBook ={...book, cover:base64};\n\n            //send to back end\n            await axios.post(url,newBook);\n\n            //clear form\n            setBook({\n                title:\"\",\n                desc:\"\",\n                price:'',\n                cover:'',\n                coverFile: null,\n\n            });\n        }catch(error){\n            console.log(error.message);\n        }\n    };\n\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject)=>{\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload =() =>{\n                resolve(fileReader.result);\n            };\n\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n\n    const handleFileUpload = (e) =>{\n        const file = e.target.files[0];\n        setBook({...book, coverFile: file});\n    }\n    //will use axios to send data to backend\n    // if you make a \"???\" cast(?) it should be an async function?\n    const handleClick = async e =>{\n        e.preventDefault() // button default behavior refreshes page\n        try{\n            // create formdata object to send form data including the image file\n            \n            formData.append(\"title\", book.title);\n            formData.append(\"desc\", book.desc);\n            formData.append(\"price\", book.price);\n            formData.append(\"cover\", book.cover);\n            console.log(\"SUCCESS!!!\")\n\n            await axios.post(\"http://10.0.0.181:8800/books\", book,{\n                headers:{\n                    \"Content-Type\": \"multipart/form-data\", // set content type in http header\n                    \n                },\n            });\n            navigate(\"/\"); // use router dom navigate function to return to home page\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    console.log(\"BOOK: \")\n    console.log(book);\n\n    console.log(\"FORM DATA: \")\n    console.log(formData)\n    return(\n\n\n        <div className='form'>\n            <h1>Add New Book</h1>\n            \n            <input type=\"text\" placeholder='title' onChange={handleChange} name=\"title\" /> \n\n            <input type=\"text\" placeholder='description' onChange={handleChange} name=\"desc\" />\n\n            <input type=\"number\" placeholder='price' onChange={handleChange} name=\"price\"/>\n\n            <input type=\"file\" label=\"Image\" accept=\".jpeg, .png, .jpg\" onChange={handleFileUpload} name=\"cover\" />\n\n            <button className=\"formButton\" onClick={handleSubmit}>Add</button>\n        </div>\n    )\n}\n\nexport default Add"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAAI;IAChC;IACAQ,KAAK,EAAC,EAAE;IACRC,IAAI,EAAC,EAAE;IACPC,KAAK,EAAC,IAAI;IACVC,KAAK,EAAC;EACV,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAE/B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,GAAG,GAAE,8BAA8B;EACzC,MAAMC,WAAW,GAAIC,QAAQ,IAAKnB,KAAK,CAACoB,IAAI,CAACH,GAAG,EAAEE,QAAQ,CAAC,CAAC,CAAC;;EAE7D,MAAME,UAAU,GAAG,MAAOD,IAAI,IAAI;IAAE;IAChC,IAAG;MACC,MAAMF,WAAW,CAACE,IAAI,CAAC;IAC3B,CAAC,QAAME,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAI;IAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAlB,OAAO,CAAEmB,IAAI,KAAI;MAAE,GAAGA,IAAI;MAAE,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAAK,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAI;IAAE;IAC/BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAG;MACC;MACA,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAAC3B,IAAI,CAAC4B,SAAS,CAAC;MACpD;MACA,MAAMC,OAAO,GAAE;QAAC,GAAG7B,IAAI;QAAEK,KAAK,EAACqB;MAAM,CAAC;;MAEtC;MACA,MAAMlC,KAAK,CAACoB,IAAI,CAACH,GAAG,EAACoB,OAAO,CAAC;;MAE7B;MACA5B,OAAO,CAAC;QACJC,KAAK,EAAC,EAAE;QACRC,IAAI,EAAC,EAAE;QACPC,KAAK,EAAC,EAAE;QACRC,KAAK,EAAC,EAAE;QACRuB,SAAS,EAAE;MAEf,CAAC,CAAC;IACN,CAAC,QAAME,KAAK,EAAC;MACTf,OAAO,CAACC,GAAG,CAACc,KAAK,CAACb,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMU,eAAe,GAAII,IAAI,IAAK;IAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAG;MAClC,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;MACnCD,UAAU,CAACE,aAAa,CAACN,IAAI,CAAC;MAC9BI,UAAU,CAACG,MAAM,GAAE,MAAK;QACpBL,OAAO,CAACE,UAAU,CAACI,MAAM,CAAC;MAC9B,CAAC;MAEDJ,UAAU,CAACK,OAAO,GAAIV,KAAK,IAAK;QAC5BI,MAAM,CAACJ,KAAK,CAAC;MACjB,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,MAAMW,gBAAgB,GAAItB,CAAC,IAAI;IAC3B,MAAMY,IAAI,GAAGZ,CAAC,CAACE,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC;IAC9BzC,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAE4B,SAAS,EAAEG;IAAI,CAAC,CAAC;EACvC,CAAC;EACD;EACA;EACA,MAAMY,WAAW,GAAG,MAAMxB,CAAC,IAAG;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC,EAAC;IACnB,IAAG;MACC;;MAEAnB,QAAQ,CAACsC,MAAM,CAAC,OAAO,EAAE5C,IAAI,CAACE,KAAK,CAAC;MACpCI,QAAQ,CAACsC,MAAM,CAAC,MAAM,EAAE5C,IAAI,CAACG,IAAI,CAAC;MAClCG,QAAQ,CAACsC,MAAM,CAAC,OAAO,EAAE5C,IAAI,CAACI,KAAK,CAAC;MACpCE,QAAQ,CAACsC,MAAM,CAAC,OAAO,EAAE5C,IAAI,CAACK,KAAK,CAAC;MACpCU,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAEzB,MAAMxB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEZ,IAAI,EAAC;QAClD6C,OAAO,EAAC;UACJ,cAAc,EAAE,qBAAqB,CAAE;QAE3C;MACJ,CAAC,CAAC;MACFrC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,QAAMM,GAAG,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrBD,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;EAEjBe,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1BD,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EACrB,oBAGIT,OAAA;IAAKiD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBlD,OAAA;MAAAkD,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBtD,OAAA;MAAOuD,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAEpC,YAAa;MAACI,IAAI,EAAC;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9EtD,OAAA;MAAOuD,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAEpC,YAAa;MAACI,IAAI,EAAC;IAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnFtD,OAAA;MAAOuD,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAEpC,YAAa;MAACI,IAAI,EAAC;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE/EtD,OAAA;MAAOuD,IAAI,EAAC,MAAM;MAACG,KAAK,EAAC,OAAO;MAACC,MAAM,EAAC,mBAAmB;MAACF,QAAQ,EAAEb,gBAAiB;MAACnB,IAAI,EAAC;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEvGtD,OAAA;MAAQiD,SAAS,EAAC,YAAY;MAACW,OAAO,EAAEjC,YAAa;MAAAuB,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd,CAAC;AAAApD,EAAA,CAhIKD,GAAG;EAAA,QAYYH,WAAW;AAAA;AAAA+D,EAAA,GAZ1B5D,GAAG;AAkIT,eAAeA,GAAG;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}