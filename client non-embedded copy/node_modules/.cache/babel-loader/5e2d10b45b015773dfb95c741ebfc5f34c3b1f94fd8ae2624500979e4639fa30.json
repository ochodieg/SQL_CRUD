{"ast":null,"code":"var _jsxFileName = \"/home/neith/cs230L_Final/frontend_client/src/pages/Books.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n/*\nshowing all books in home page: fetch data from backend server using axios\nwhich lets us make api requests? isn't that what jsx does when stringing together an sql command?\n*/\n\n/*\nwhenever Books component is ran,\nit will run the useEffect function,\nwithin useEffect, our defined fetchAllBooks function will attempt to fetch \"all data\"???\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Books = () => {\n  _s();\n  //create book state\n  const [books, setBooks] = useState([]);\n\n  // this portion correlates  with the middleware function \"app.use(cors())\" in the index.js\n  useEffect(() => {\n    // fetching function\n    const fetchAllBooks = async () => {\n      // async function because we are making an api request???\n      try {\n        const res = await axios.get(\"http://10.0.0.181:8800/books\"); // response? because it is async, we need to await?\n        /*\n         using http://localhost:8800/books makes the server bound to the localhost interface only\n         making it inaccessible from remote client on same network \n         using http://10.0.0.181:8800/books ensures it is accessible from both localhost and other client on same network\n        */\n        setBooks(res.data); // update this variable with data from axios.get method above\n        console.log(res); // show response\n      } catch (err) {\n        console.log(\"uh oh, stinky: \" + err);\n      }\n    };\n    fetchAllBooks();\n  }, []); // second arg: dependency will be an empty array meaning it will run just once??\n\n  const handleDelete = async id => {\n    // handles delete button action\n    try {\n      await axios.delete(\"http://10.0.0.181:8800/books/\" + id); // have to send id\n      window.location.reload(); // refresh window (can also use redux??)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const container = document.querySelector('.books');\n  const firstRowHeight = container.querySelector('.book').offsetHeight;\n\n  // Set padding-top of container to the height of the first row\n  container.style.paddingTop = `${firstRowHeight}px`;\n\n  // return map to books array in \"books\" div\n  // for each book inside array, return another book div\n  // recall that cover can be null in sql table so we use the conditional:\n  // {book.cover && <img src=\"book.cover\" alt=\"\"/>} meaning if book cover is null, don't show the additional info\n  // also, because we use a map, we need to unit keys, which are the book id's in the sql table \"<div className=\"book\" key={book.id}>\"\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Ivans Bookshop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book\",\n        children: [book.cover && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.cover,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: book.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => handleDelete(book.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/update/${book.id}`,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add\",\n        children: \"Add new book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Books, \"0RCSQAoxRTVulXhkm6nZ01qyDwI=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","Books","_s","books","setBooks","fetchAllBooks","res","get","data","console","log","err","handleDelete","id","delete","window","location","reload","container","document","querySelector","firstRowHeight","offsetHeight","style","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","book","cover","src","alt","title","desc","price","onClick","to","_c","$RefreshReg$"],"sources":["/home/neith/cs230L_Final/frontend_client/src/pages/Books.jsx"],"sourcesContent":["import React from 'react'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\n/*\nshowing all books in home page: fetch data from backend server using axios\nwhich lets us make api requests? isn't that what jsx does when stringing together an sql command?\n*/\n\n\n/*\nwhenever Books component is ran,\nit will run the useEffect function,\nwithin useEffect, our defined fetchAllBooks function will attempt to fetch \"all data\"???\n*/\n\n\nconst Books = () => {\n    //create book state\n    const [books,setBooks] = useState([])\n\n    // this portion correlates  with the middleware function \"app.use(cors())\" in the index.js\n    useEffect(() =>{\n        // fetching function\n        const fetchAllBooks = async () =>{  // async function because we are making an api request???\n            try{\n                const res = await axios.get(\"http://10.0.0.181:8800/books\")   // response? because it is async, we need to await?\n                /*\n                 using http://localhost:8800/books makes the server bound to the localhost interface only\n                 making it inaccessible from remote client on same network \n                 using http://10.0.0.181:8800/books ensures it is accessible from both localhost and other client on same network\n                */\n                 setBooks(res.data); // update this variable with data from axios.get method above\n                console.log(res)    // show response\n            }catch(err){\n                console.log(\"uh oh, stinky: \" + err)\n            }\n        }\n        fetchAllBooks()\n    }, []) // second arg: dependency will be an empty array meaning it will run just once??\n\n    const handleDelete = async (id) =>{ // handles delete button action\n        try{\n            await axios.delete(\"http://10.0.0.181:8800/books/\"+id) // have to send id\n            window.location.reload() // refresh window (can also use redux??)\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    const container = document.querySelector('.books');\n    const firstRowHeight = container.querySelector('.book').offsetHeight;\n\n    // Set padding-top of container to the height of the first row\n    container.style.paddingTop = `${firstRowHeight}px`;\n\n    // return map to books array in \"books\" div\n    // for each book inside array, return another book div\n    // recall that cover can be null in sql table so we use the conditional:\n    // {book.cover && <img src=\"book.cover\" alt=\"\"/>} meaning if book cover is null, don't show the additional info\n    // also, because we use a map, we need to unit keys, which are the book id's in the sql table \"<div className=\"book\" key={book.id}>\"\n    return(\n        <div>\n            <header>Ivans Bookshop</header>\n            <div className=\"books\">\n                {books.map((book)=>(\n                    <div className=\"book\" key={book.id}>\n                        {book.cover && <img src={book.cover} alt=\"\"/>}\n                        <h2>{book.title}</h2>\n                        <p>{book.desc}</p>\n                        <span>{book.price}</span>\n                        <button className=\"delete\" onClick={()=>handleDelete(book.id)}>Delete</button>\n                        <button className=\"update\"><Link to={`/update/${book.id}`}>Update</Link></button>\n                    </div>\n                ))}\n            </div>\n            <button className='addButton'><Link to=\"/add\">Add new book</Link></button>\n        </div>\n    )\n}\n\nexport default Books"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}