{"ast":null,"code":"var _jsxFileName = \"/home/neith/cs230L_Final/frontend_client/src/pages/Update.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useLoaderData, useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  const [file, setFile] = useState(); //handleChange var\n  //useState takes values from webpage inputs into json object\n  const [book, setBook] = useState({\n    // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n    // name attributes below must match these\n    title: \"\",\n    desc: \"\",\n    price: null,\n    cover: \"\"\n  });\n  const navigate = useNavigate();\n  const location = useLocation(); // using router dom to get router location/book id\n  console.log(location.pathname.split(\"/\")[2]); // this will print to the console the pathname of location \n  // because we have the route for update set as \"/update/:id\"\n  // we will try to extract only the id portion of route for the handleClick put method\n  // split() will creat an array of the route string using the slash as a delimiter\n  // we will then use the index location of the id string\n\n  const bookId = location.pathname.split(\"/\")[2];\n  const handleChange = e => {\n    //whenever input changes, set book\n    // this allows fields to update in real-time?\n    setBook(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n    // syntax here is wild. jesus\n  };\n  const handleFileChange = e => {\n    // handles any change in file input\n    //HANDLE FILE UPLOAD\n    setFile(e.target.files[0]); // store first file in array in file const var\n    console.log(e.target.files[0]);\n    console.log(\"file is:\");\n    console.log(file);\n    // in order for \n  };\n\n  //will use axios to send data to backend\n  // if you make a \"???\" cast(?) it should be an async function?\n  // const handleClick = async e =>{\n  //     e.preventDefault() // button default behavior refreshes page\n  //     try{\n  //         await axios.put(\"http://10.0.0.181:8800/books/\"+ bookId, book)  // send to json object with deliminated id\n  //         navigate(\"/\")   // use router dom navigate function to return to home page\n  //     }catch(err){\n  //         console.log(err)\n  //     }\n  // }\n  const handleClick = async e => {\n    e.preventDefault(); // button default behavior refreshes page\n\n    const formData = new FormData(); //creating a container for the http form data \n    formData.append('image', file); //adds a file to the container , associating it with the name 'image'\n\n    //console.log(\"stinky\"+ file.filename); why cant i access filename \n    // until the put method? does upload.single('image') have something to do with it?\n\n    formData.append(\"document\", JSON.stringify(book));\n    formData.append(\"id\", JSON.stringify(bookId));\n    try {\n      await axios.put(\"http://10.0.0.181:8800/books/\" + bookId, formData); // send to json object with deliminated id\n      navigate(\"/\"); // use router dom navigate function to return to home page\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(book);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      onChange: handleChange,\n      name: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"description\",\n      onChange: handleChange,\n      name: \"desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"price\",\n      onChange: handleChange,\n      name: \"price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      placeholder: \"cover\",\n      onChange: handleFileChange,\n      name: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"formButton\",\n      onClick: handleClick,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"+fa3NakSSH4ARhKE5C6mnXUfNv8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["axios","React","useState","useLoaderData","useLocation","useNavigate","jsxDEV","_jsxDEV","Update","_s","file","setFile","book","setBook","title","desc","price","cover","navigate","location","console","log","pathname","split","bookId","handleChange","e","prev","target","name","value","handleFileChange","files","handleClick","preventDefault","formData","FormData","append","JSON","stringify","put","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/neith/cs230L_Final/frontend_client/src/pages/Update.jsx"],"sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useLoaderData, useLocation, useNavigate } from 'react-router-dom'\n\nconst Update = () => {\n    const [file, setFile] = useState(); //handleChange var\n    //useState takes values from webpage inputs into json object\n    const [book,setBook] = useState({   // whenever a value is set on webpage, setBook binds to it?? (idk this dude mumbles way too much but checkout his usestate video i guess)\n        // name attributes below must match these\n        title:\"\",\n        desc:\"\",\n        price:null,\n        cover:\"\"\n    })\n\n    const navigate = useNavigate()\n    const location = useLocation()  // using router dom to get router location/book id\n    console.log(location.pathname.split(\"/\")[2])   // this will print to the console the pathname of location \n                            // because we have the route for update set as \"/update/:id\"\n                            // we will try to extract only the id portion of route for the handleClick put method\n                            // split() will creat an array of the route string using the slash as a delimiter\n                            // we will then use the index location of the id string\n\n    const bookId = location.pathname.split(\"/\")[2];\n\n    const handleChange = (e) =>{\n        //whenever input changes, set book\n        // this allows fields to update in real-time?\n        setBook((prev)=>({ ...prev, [e.target.name]: e.target.value}));\n        // syntax here is wild. jesus\n    };\n\n    const handleFileChange = (e) => { // handles any change in file input\n        //HANDLE FILE UPLOAD\n        setFile(e.target.files[0]);  // store first file in array in file const var\n        console.log(e.target.files[0]);\n        console.log(\"file is:\");\n        console.log(file);\n        // in order for \n\n    }\n\n    //will use axios to send data to backend\n    // if you make a \"???\" cast(?) it should be an async function?\n    // const handleClick = async e =>{\n    //     e.preventDefault() // button default behavior refreshes page\n    //     try{\n    //         await axios.put(\"http://10.0.0.181:8800/books/\"+ bookId, book)  // send to json object with deliminated id\n    //         navigate(\"/\")   // use router dom navigate function to return to home page\n    //     }catch(err){\n    //         console.log(err)\n    //     }\n    // }\n    const handleClick = async e =>{\n        e.preventDefault() // button default behavior refreshes page\n\n        const formData = new FormData(); //creating a container for the http form data \n        formData.append('image', file); //adds a file to the container , associating it with the name 'image'\n\n        //console.log(\"stinky\"+ file.filename); why cant i access filename \n        // until the put method? does upload.single('image') have something to do with it?\n\n        formData.append(\"document\", JSON.stringify(book));\n        formData.append(\"id\", JSON.stringify(bookId) );\n\n        try{\n            await axios.put(\"http://10.0.0.181:8800/books/\"+ bookId, formData)  // send to json object with deliminated id\n            navigate(\"/\")   // use router dom navigate function to return to home page\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    console.log(book);\n\n    return(\n        <div className='form'>\n            <h1>Update Book</h1>\n            <input type=\"text\" placeholder='title' onChange={handleChange} name=\"title\" /> \n\n            <input type=\"text\" placeholder='description' onChange={handleChange} name=\"desc\" />\n\n            <input type=\"number\" placeholder='price' onChange={handleChange} name=\"price\"/>\n\n            <input type=\"file\" placeholder='cover' onChange={handleFileChange} name=\"cover\" />\n\n            <button className=\"formButton\" onClick={handleClick}>Update</button>\n        </div>\n    )\n}\n\nexport default Update"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}